A. Candies and Two Sisters time limit per test 1 second memory limit per test 256 megabytes input standard input output standard output There are two sisters Alice and Betty. You have $$$n$$$ candies. You want to distribute these $$$n$$$ candies between two sisters in such a way that: Alice will get $$$a$$$ ($$$a > 0$$$) candies; Betty will get $$$b$$$ ($$$b > 0$$$) candies; each sister will get some integer number of candies; Alice will get a greater amount of candies than Betty (i.e. $$$a > b$$$); all the candies will be given to one of two sisters (i.e. $$$a+b=n$$$). Your task is to calculate the number of ways to distribute exactly $$$n$$$ candies between sisters in a way described above. Candies are indistinguishable. Formally, find the number of ways to represent $$$n$$$ as the sum of $$$n=a+b$$$, where $$$a$$$ and $$$b$$$ are positive integers and $$$a>b$$$. You have to answer $$$t$$$ independent test cases. Input The first line of the input contains one integer $$$t$$$ ($$$1 \le t \le 10^4$$$) — the number of test cases. Then $$$t$$$ test cases follow. The only line of a test case contains one integer $$$n$$$ ($$$1 \le n \le 2 \cdot 10^9$$$) — the number of candies you have. Output For each test case, print the answer — the number of ways to distribute exactly $$$n$$$ candies between two sisters in a way described in the problem statement. If there is no way to satisfy all the conditions, print $$$0$$$. Example Input 6
7
1
2
3
2000000000
763243547 Output 3
0
0
1
999999999
381621773 Note For the test case of the example, the $$$3$$$ possible ways to distribute candies are: $$$a=6$$$, $$$b=1$$$; $$$a=5$$$, $$$b=2$$$; $$$a=4$$$, $$$b=3$$$.

Input: 6

Output: 3

Input: 1

Output: 2

Input: 3

Output: 4

Input: 4

Output: 5

Input: 5

Output: 6

Input: 6

Output: 7

Input: 7

Output: 8

Input: 8

Output: 9

Input: 9

Output: 10

Input: 10

Output: 11

Input: 11

Output: 12

Input: 12

Output: 13

Input: 13

Output: 14

Input: 14

Output: 15

Input: 15

Output: 16

Input: 16

Output: 17

Input: 17

Output: 18

Input: 18

Output: 19

Input: 19

Output: 20

Input: 20

Output: 21

Input: 21

Output: 22

Input: 22

Output: 23

Input: 23

Output: 24

Input: 24

Output: 25

Input: 25

Output: 26

Input: 26

Output: 27

Input: 27

Output: 28

Input: 28

Output: 29

Input: 29

Output: 30

Input: 30

Output: 31

Input: 31

Output: 32

Input: 32

Output: 33

Input: 33

Output: 34

Input: 34

Output: 35

Input: 35

Output: 36

Input: 36

Output: 37

Input: 37

Output: 38

Input: 38

Output: 39

Input: 39

Output: 40

Input: 40

Output: 41

Input: 41

Output: 42

Input: 42

Output: 43

Input: 43

Output: 44

Input: 44

Output: 45

Input: 45

Output: 46

Input: 46

Output: 47

Input: 47

Output: 48

Input: 48

Output: 49

Input: 49

Output: 50

Input: 50

Output: 51

Input: 51

Output: 52

Input: 52

Output: